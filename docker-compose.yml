version: '3.3'
services:
  user-service-postgres:
    image: postgres:15.2
    container_name: user-service-postgres
    ports:
      - '5435:5432'
    environment:
      POSTGRES_PASSWORD: ${USER_SERVICE_PG_PASSWORD}
      POSTGRES_USER: ${USER_SERVICE_PG_USER}
      POSTGRES_DB: ${USER_SERVICE_PG_DB}
    restart: always
    volumes:
      - ./docker/user-service-postgres/data:/var/lib/postgresql/data
    networks:
      - wms-network

  user-service-redis:
    image: redis:7.4.0
    container_name: user-service-redis
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - ./docker/user-service-redis/data:/root/redis
    environment:
      - REDIS_DATABASES=${USER_SERVICE_REDIS_DB}
      - REDIS_PASSWORD=${USER_SERVICE_REDIS_PASSWORD}
    networks:
      - wms-network

  search-service:
    restart: always
    build:
      context: ./elasticsearch
      dockerfile: Dockerfile
    container_name: search-service
    volumes:
      - ./docker/search-service/data:/usr/share/elasticsearch/data
    environment:
      discovery.type: 'single-node'
      xpack.security.enabled: 'true'
      ELASTIC_USERNAME: ${SEARCH_SERVICE_USERNAME}
      ELASTIC_PASSWORD: ${SEARCH_SERVICE_PASSWORD}
    ports:
      - '9200:9200'
    networks:
      - wms-network

  search-service-kibana:
    restart: always
    image: kibana:7.8.1
    container_name: search0-service-kibana
    environment:
      XPACK_SECURITY_ENABLED: 'true'
      ELASTICSEARCH_HOSTS: ${SEARCH_SERVICE_HOST}
      ELASTICSEARCH_USERNAME: ${SEARCH_SERVICE_USERNAME}
      ELASTICSEARCH_PASSWORD: ${SEARCH_SERVICE_PASSWORD}
    ports:
      - 5601:5601
    networks:
      - wms-network

  user-service:
    container_name: user-service
    build:
      context: ./user-service
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - '7777:7777'
      - '8777:8000'
    environment:
      USER_SERVICE_SMTP_EMAIL: <set_value>
      USER_SERVICE_SMTP_PASSWORD: <set_value>
      USER_SERVICE_GITHUB_CLIENT_ID: <set_value>
      USER_SERVICE_GITHUB_CLIENT_SECRET: <set_value>
      USER_SERVICE_GOOGLE_CLIENT_ID: <set_value>
      USER_SERVICE_GOOGLE_CLIENT_SECRET: <set_value>
      USER_SERVICE_YANDEX_CLIENT_ID: <set_value>
      USER_SERVICE_YANDEX_CLIENT_SECRET: <set_value>
      USER_SERVICE_REDIS_DB: ${USER_SERVICE_REDIS_DB}
      USER_SERVICE_REDIS_HOST: ${USER_SERVICE_REDIS_HOST}
      USER_SERVICE_REDIS_PORT: ${USER_SERVICE_REDIS_PORT}
      USER_SERVICE_REDIS_PASSWORD: ${USER_SERVICE_REDIS_PASSWORD}
      USER_SERVICE_PG_HOST: ${USER_SERVICE_PG_HOST}
      USER_SERVICE_PG_PORT: ${USER_SERVICE_PG_PORT}
      USER_SERVICE_PG_DB: ${USER_SERVICE_PG_DB}
      USER_SERVICE_PG_USER: ${USER_SERVICE_PG_USER}
      USER_SERVICE_PG_PASSWORD: ${USER_SERVICE_PG_PASSWORD}
      USER_SERVICE_PATH_STORAGE: /user-service-file-store
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    volumes:
      - ./docker/user-service/file-storage:/user-service-file-store
    depends_on:
      - user-service-postgres
      - user-service-redis
    networks:
      - wms-network

  wms-service:
    container_name: wms-service
    build:
      context: ./wms-service
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - '9001:9001'
      - '9777:8000'
    environment:
      WMS_SERVICE_SSO_URL: ${WMS_SERVICE_SSO_URL}
      WMS_SERVICE_PG_HOST: ${WMS_SERVICE_PG_HOST}
      WMS_SERVICE_PG_PORT: ${WMS_SERVICE_PG_PORT}
      WMS_SERVICE_PG_DB: ${WMS_SERVICE_PG_DB}
      WMS_SERVICE_PG_USER: ${WMS_SERVICE_PG_USER}
      WMS_SERVICE_PG_PASSWORD: ${WMS_SERVICE_PG_PASSWORD}
      SEARCH_SERVICE_HOST: ${SEARCH_SERVICE_HOST}
      SEARCH_SERVICE_USERNAME: ${SEARCH_SERVICE_USERNAME}
      SEARCH_SERVICE_PASSWORD: ${SEARCH_SERVICE_PASSWORD}
    depends_on:
      - wms-service-postgres
      - search-service
      - wms-client
    networks:
      - wms-network

  wms-service-postgres:
    image: postgres:15.2
    container_name: wms-service-postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: ${WMS_SERVICE_PG_USER}
      POSTGRES_PASSWORD: ${WMS_SERVICE_PG_PASSWORD}
      POSTGRES_DB: ${WMS_SERVICE_PG_DB}
    restart: always
    volumes:
      - ./docker/wms--service-postgres/data:/var/lib/postgresql/data
    networks:
      - wms-network

  wms-client:
    container_name: wms-client
    restart: always
    logging:
      options:
        max-size: "10m"
        max-file: "10"
    build:
      context: wms-client
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    networks:
      - wms-network

  swagger-ui:
    container_name: swagger-ui
    build:
      context: ./swagger-ui
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - '7778:7778'
      - '6777:8000'
    networks:
      - wms-network

networks:
  wms-network:
    ipam:
      driver: default
      config:
        - subnet: "14.205.210.0/24"